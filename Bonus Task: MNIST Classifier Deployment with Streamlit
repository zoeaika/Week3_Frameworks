import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# Load pre-trained model
model = tf.keras.models.load_model('mnist_cnn.h5')

st.title("MNIST Digit Classifier")
st.write("Upload a 28x28 grayscale image of a digit")

# Image upload
uploaded_file = st.file_uploader("Choose an image...", type=["png", "jpg"])
if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('L')
    image = image.resize((28, 28))
    st.image(image, caption='Uploaded Image', width=150)
    
    # Preprocess image
    img_array = np.array(image).reshape(1, 28, 28, 1) / 255.0
    
    # Prediction
    prediction = model.predict(img_array)
    digit = np.argmax(prediction)
    confidence = np.max(prediction)
    
    st.success(f"Prediction: {digit} (Confidence: {confidence:.2%})")
